(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{386:function(e,t,o){"use strict";o.r(t);var r=o(28),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"application"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#application"}},[e._v("#")]),e._v(" Application")]),e._v(" "),o("h3",{attrs:{id:"nodeactylapplication"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#nodeactylapplication"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge tip",staticStyle:{"vertical-align":"top"}},[e._v("class")]),e._v(" "),o("code",[e._v("NodeactylApplication(host, key)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Main class constructor")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("host")]),e._v(" - Where your panel is hosted (EG: http(s)://panel.host.net/)")]),e._v(" "),o("li",[o("code",[e._v("key")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getallusers"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getallusers"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getAllUsers(Page)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets a list of users from your panel")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("Page")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - number")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getuserdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getuserdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getUserDetails(userId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets details of a user")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("userId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getuserbyusername"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getuserbyusername"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getUserByUsername(username)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets details of a user by username")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("username")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getuserbyemail"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getuserbyemail"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getUserByEmail(email)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets details of a user")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("email")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getuserpage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getuserpage"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getUserPage(pageNum)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets users by a specified page number\n\nThis will return an empty array if the specified page was invalid.")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("pageNum")])])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createuser"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createuser"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createUser(Email, Username, FirstName, LastName)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Creates a user")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("Email")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Users email")]),e._v(" "),o("li",[o("code",[e._v("Username")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Users username")]),e._v(" "),o("li",[o("code",[e._v("FirstName")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Users first name")]),e._v(" "),o("li",[o("code",[e._v("LastName")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Users last name")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"updateuserdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#updateuserdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("updateUserDetails(userId, Email, Username, FirstName, LastName, Language, Password)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Updates a users details")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("userId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Email")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Username")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("FirstName")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("LastName")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Language")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Password")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createServer(Version, NameOfServer, OwnerID, EggID, DockerImage, StartupCmd, RAM, Swap, Disk, IO, CPU, AmountOfDatabases, AmountOfBackups, AmountOfAllocations)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Creates a server !! DEPRECATED !!")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("Version")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Version of the server to use")]),e._v(" "),o("li",[o("code",[e._v("NameOfServer")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Name of server to create")]),e._v(" "),o("li",[o("code",[e._v("OwnerID")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - User ID of who should own this server")]),e._v(" "),o("li",[o("code",[e._v("EggID")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - Egg ID to use when installing the server")]),e._v(" "),o("li",[o("code",[e._v("DockerImage")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - The image to use from Docker")]),e._v(" "),o("li",[o("code",[e._v("StartupCmd")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - The command to use when starting this server (AKA JVM Arguments)")]),e._v(" "),o("li",[o("code",[e._v("RAM")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of RAM the server has")]),e._v(" "),o("li",[o("code",[e._v("Swap")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of Swap the server has")]),e._v(" "),o("li",[o("code",[e._v("Disk")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of Storage the server has")]),e._v(" "),o("li",[o("code",[e._v("IO")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - Set this to 500 please. (Even if you know what it is leave it alone)")]),e._v(" "),o("li",[o("code",[e._v("CPU")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of CPU Power the server can use (100 = 1 core);")]),e._v(" "),o("li",[o("code",[e._v("AmountOfDatabases")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The max amount of databases a server can use")]),e._v(" "),o("li",[o("code",[e._v("AmountOfBackups")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The max backups you can hold")]),e._v(" "),o("li",[o("code",[e._v("AmountOfAllocations")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The max amount of allocation(s) a server can us")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createrawserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createrawserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createRawServer(object)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Creates a server using a raw JSON object")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("object")])])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createsimpleserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createsimpleserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createSimpleServer(OwnerID, EggID, RAM, Disk, CPU, AmountOfDatabases, AmountOfBackups, AmountOfAllocations)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Creates a server")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("OwnerID")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - User ID of who should own this server")]),e._v(" "),o("li",[o("code",[e._v("EggID")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - Egg ID to use when installing the server")]),e._v(" "),o("li",[o("code",[e._v("RAM")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of RAM the server has")]),e._v(" "),o("li",[o("code",[e._v("Disk")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of Storage the server has")]),e._v(" "),o("li",[o("code",[e._v("CPU")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of CPU Power the server can use (100 = 1 core);")]),e._v(" "),o("li",[o("code",[e._v("AmountOfDatabases")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The max amount of databases a server can use")]),e._v(" "),o("li",[o("code",[e._v("AmountOfBackups")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The max backups you can hold")]),e._v(" "),o("li",[o("code",[e._v("AmountOfAllocations")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The max amount of allocation(s) a server can us")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getallservers"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getallservers"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getAllServers()")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets a list of servers from your panel, currently this only get the first page but i will add support for grabbing ALL pages with this methods")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getserverpage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getserverpage"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getServerPage(pageNum)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets servers by a specified page number\n\nThis will return an empty array if the specified page was invalid.")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("pageNum")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getserverdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getserverdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getServerDetails(serverId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets a info of a server from your panel")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"deleteuser"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deleteuser"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("deleteUser(userId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Deletes a specified user\n\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"\nHowever do not this value will NEVER be false. To catch an error for this request you check if the caught error === 404, this will mean\nthe provided API key was non existing.\n\nMUST USE ClientAPI Key!!! Application API Keys NO LONGER WORK with ANY Pterodactyl version 1 and above!')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("userId")])])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"suspendserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#suspendserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("suspendServer(serverId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Suspend a server if the host and api key have permission\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"unsuspendserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#unsuspendserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("unsuspendServer(serverId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Unsuspend a server if the host and api key have permission\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"reinstallserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#reinstallserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("reinstallServer(serverId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Reinstall a server if the host and api key have permission\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"updateserverdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#updateserverdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("updateServerDetails(serverId, Name, userId, externalId, Description)")])]),e._v(" "),o("blockquote",[o("p",[e._v('UpdateServerDetails\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Name")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("userId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("externalId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Description")]),e._v(" ("),o("em",[e._v("String")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"updateserverbuild"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#updateserverbuild"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("updateServerBuild(serverId, AllocationID, RAM, Swap, IO, CPU, Disk, Threads, AmountOfDatabases, AmountOfBackups, AmountOfAllocations)")])]),e._v(" "),o("blockquote",[o("p",[e._v('UpdateServerBuild\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("AllocationID")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("RAM")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Swap")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("IO")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("CPU")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Disk")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("Threads")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("AmountOfDatabases")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("AmountOfBackups")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("AmountOfAllocations")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"updateserverstartup"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#updateserverstartup"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("updateServerStartup(serverId, StartupCmd, Environment, Egg, DockerImage, SkipScripts)")])]),e._v(" "),o("blockquote",[o("p",[e._v("UpdateServerStartup\n\nThis update the startup details for a specified server")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")]),e._v(" - ID of serer")]),e._v(" "),o("li",[o("code",[e._v("StartupCmd")]),e._v(" - new startup command to use for this server")]),e._v(" "),o("li",[o("code",[e._v("Environment")]),e._v(" - The environment object for this server to use")]),e._v(" "),o("li",[o("code",[e._v("Egg")]),e._v(" - Egg ID for this serer to use")]),e._v(" "),o("li",[o("code",[e._v("DockerImage")]),e._v(" - Docker Image for this serer")]),e._v(" "),o("li",[o("code",[e._v("SkipScripts")]),e._v(" - Do you want to skip scripts? (have no idea what this is)")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"deleteserver"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deleteserver"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("deleteServer(serverId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Deletes a specified server\n\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"\nHowever do not this value will NEVER be false. To catch an error for this request you check if the caught error === 404, this will mean\nthe provided API key was non existing.\n\nMUST USE ClientAPI Key!!! Application API Keys NO LONGER WORK with ANY Pterodactyl version 1 and above!')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("serverId")])])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getnestdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getnestdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getNestDetails(nestId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets details of a nest")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nestId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getalllocations"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getalllocations"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getAllLocations()")])]),e._v(" "),o("blockquote",[o("p",[e._v("Get all locations from your panel")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getlocationpage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getlocationpage"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getLocationPage(pageNum)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets locations by a specified page number\n\nThis will return an empty array if the specified page was invalid.")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("pageNum")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getlocationdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getlocationdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getLocationDetails(locationId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets a info of a location from your panel")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("locationId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createlocation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createlocation"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createLocation(short, long)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Creates a new location")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("short")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Identifier for the location Ex: GB")]),e._v(" "),o("li",[o("code",[e._v("long")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Descrption for the location Ex: London Datacenter")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"updatelocationdetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#updatelocationdetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("updateLocationDetails(locationId, short, long)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Updates the short or long location details")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("locationId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")]),e._v(" "),o("li",[o("code",[e._v("short")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Identifier for the location Ex: GB")]),e._v(" "),o("li",[o("code",[e._v("long")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Descrption for the location Ex: London Datacenter")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"deletelocation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deletelocation"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("deleteLocation(locationId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Deletes a specified location\n\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"\nHowever do not this value will NEVER be false. To catch an error for this request you check if the caught error === 404, this will mean\nthe provided API key was non existing.')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("locationId")])])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getallnodes"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getallnodes"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getAllNodes()")])]),e._v(" "),o("blockquote",[o("p",[e._v("Get all nodes from your panel")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getnodepage"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getnodepage"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getNodePage(pageNum)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets nodes by a specified page number\n\nThis will return an empty array if the specified page was invalid.")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("pageNum")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(")")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getnodedetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getnodedetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getNodeDetails(nodeId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets info of a node from your panel")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id oftthe node to get the details of")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getnodeconfig"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getnodeconfig"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getNodeConfig(nodeId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets the configuration of given node")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the node to get the config for")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createnode"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createnode"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createNode(name, locationId, fqdn, memory, disk)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Creates a new node")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("name")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - name of the new node")]),e._v(" "),o("li",[o("code",[e._v("locationId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the location to assign to this node")]),e._v(" "),o("li",[o("code",[e._v("fqdn")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - the Fully Qualified Domain Name (or IP) for this node")]),e._v(" "),o("li",[o("code",[e._v("memory")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the amount of memory/ram this node has")]),e._v(" "),o("li",[o("code",[e._v("disk")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - The amount of storage this node has")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"updatenodedetails"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#updatenodedetails"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("updateNodeDetails(nodeId, name, description, locationId, fqdn, scheme, behindProxy, maintenanceMode, memory, memoryOver, disk, diskOver, uploadSize, daemonSftp, daemonListen)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Updates the details of the given node")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - id of the node to update")]),e._v(" "),o("li",[o("code",[e._v("name")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - name of the node")]),e._v(" "),o("li",[o("code",[e._v("description")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - description of the node")]),e._v(" "),o("li",[o("code",[e._v("locationId")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - id of the location this node belongs to")]),e._v(" "),o("li",[o("code",[e._v("fqdn")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - Fully Qualified Domain Name for node")]),e._v(" "),o("li",[o("code",[e._v("scheme")]),e._v(" ("),o("em",[e._v("String")]),e._v(") - scheme for node")]),e._v(" "),o("li",[o("code",[e._v("behindProxy")]),e._v(" ("),o("em",[e._v("Boolean")]),e._v(") - whether or not node is behind proxy like cloudflare")]),e._v(" "),o("li",[o("code",[e._v("maintenanceMode")]),e._v(" ("),o("em",[e._v("Boolean")]),e._v(") - whether or not the node is under maintenance")]),e._v(" "),o("li",[o("code",[e._v("memory")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - memory of node")]),e._v(" "),o("li",[o("code",[e._v("memoryOver")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - % of memory allowed to go over limit")]),e._v(" "),o("li",[o("code",[e._v("disk")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - disk space of the node")]),e._v(" "),o("li",[o("code",[e._v("diskOver")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - % of disk allowed to go over limit")]),e._v(" "),o("li",[o("code",[e._v("uploadSize")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - max uploadSize, usually 100")]),e._v(" "),o("li",[o("code",[e._v("daemonSftp")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - port for sftp")]),e._v(" "),o("li",[o("code",[e._v("daemonListen")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - port for daemon to listen on")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"deletenode"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deletenode"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("deleteNode(nodeId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Deletes a specified node\n\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"\nHowever do not this value will NEVER be false. To catch an error for this request you check if the caught error === 404, this will mean\nthe provided API key was non existing.')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the node to delete")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"getnodeallocations"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#getnodeallocations"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("getNodeAllocations(nodeId)")])]),e._v(" "),o("blockquote",[o("p",[e._v("Gets the allocations of given node")])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the node to get the allocations of")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"createnodeallocations"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#createnodeallocations"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("createNodeAllocations(nodeId, ip, ports)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Create allocations on given node\n\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"\nHowever do not this value will NEVER be false. To catch an error for this request you check if the caught error === 404, this will mean\nthe provided API key was non existing.')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the node to add allocations to")]),e._v(" "),o("li",[o("code",[e._v("ip")]),e._v(" ("),o("em",[e._v("String")]),e._v(') - the ip of the allocation as a string Ex: "127.0.0.1"')]),e._v(" "),o("li",[o("code",[e._v("ports")]),e._v(" ("),o("em",[e._v("Array")]),e._v(') - an array of ports as strings Ex: ["25565", "25575"]')])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("blockquote",{staticClass:"scoped error"},[o("h4",{attrs:{id:"deletenodeallocation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#deletenodeallocation"}},[e._v("#")]),e._v(" "),o("span",{staticClass:"badge error",staticStyle:{"vertical-align":"top"}},[e._v("function")]),e._v(" "),o("code",[e._v("deleteNodeAllocation(nodeId, allocationId)")])]),e._v(" "),o("blockquote",[o("p",[e._v('Deletes a specified node allocation\n\nBy default Pterodactyl API returns a empty string on success (""), i altered the response to make it a boolean value of "true"\nHowever do not this value will NEVER be false. To catch an error for this request you check if the caught error === 404, this will mean\nthe provided API key was non existing.')])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Parameters")])]),e._v(" "),o("ul",[o("li",[o("code",[e._v("nodeId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the node to delete the allocation on")]),e._v(" "),o("li",[o("code",[e._v("allocationId")]),e._v(" ("),o("em",[e._v("Integer")]),e._v(") - the id of the allocation to delete")])])]),e._v(" "),o("blockquote",[o("p",[o("strong",[e._v("Returns")])]),e._v(" "),o("ul",[o("li",[e._v(" ("),o("em",[e._v("Promise")]),e._v(")")])])])]),e._v(" "),o("style",[e._v("\n.badge {\n  display: inline-block;\n  font-size: 20px;\n  font-family: monospace;\n  height: 28px;\n  line-height: 28px;\n  border-radius: 3px;\n  padding: 0 6px;\n  color: #fff;\n  background-color: #42b983;\n}\n.scoped .badge,\nblockquote .badge {\n  font-size: 15px;\n  height: 23px;\n  line-height: 23px;\n}\n.badge.warning {\n  background-color: #e7c000;\n}\n.badge.error {\n  background-color: #da5961;\n}\n.badge.tip {\n  background-color: #42b983;\n}\nblockquote.scoped.warning {\n  border-color: #e7c000;\n}\nblockquote.scoped.error {\n  border-color: #da5961;\n}\nblockquote.scoped.tip {\n  border-color: #42b983;\n}\n\n")])])}),[],!1,null,null,null);t.default=a.exports}}]);